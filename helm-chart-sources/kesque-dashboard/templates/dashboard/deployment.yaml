{{- if not .Values.application.initializeCommand -}}
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}
  labels:
    app: {{ template "appname" . }}
    track: "{{ .Values.application.track }}"
    tier: "{{ .Values.application.tier }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "appname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/application-secrets: "{{ .Values.application.secretChecksum }}"
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "appname" . }}
        track: "{{ .Values.application.track }}"
        tier: "{{ .Values.application.tier }}"
        release: {{ .Release.Name }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "appname" . }} 
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
      - name: {{ .Values.image.secret }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.application.secretName }}
        envFrom:
        - secretRef:
            name: {{ .Values.application.secretName }}
        {{- end }}
        env:
        - name: WORDPRESS_DB_HOST
          value: {{ .Release.Name }}-mariadb-svc
        - name: WORDPRESS_DB_USER
          value: {{ .Values.application.dbUser }}
        - name: WORDPRESS_DB_PASSWORD
          value: {{ .Values.application.dbPassword }}
        - name: WORDPRESS_DB_NAME
          value: {{ .Values.application.dbName }}
        - name: WORDPRESS_CONFIG_EXTRA
          value: "define('FS_METHOD', 'direct' ); define( 'WP_DEBUG_LOG', true ); define( 'WP_DEBUG_DISPLAY', false ); define( 'DISABLE_WP_CRON', true ); define( 'ALLOW_UNFILTERED_UPLOADS', true); define( 'WP_AUTO_UPDATE_CORE', false ); define( 'W3TC_CONFIG_DATABASE', true ); define( 'WP_HOME', '{{ .Values.application.url }}' ); define( 'WP_SITEURL', '{{ .Values.application.url }}' );"
        envFrom:
        - configMapRef:
            name: wp-keys-salts
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end -}}
