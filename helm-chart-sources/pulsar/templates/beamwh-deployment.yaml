#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if .Values.extra.beamwh }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.beamwh.component }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "pulsar.name" . }}
    chart: {{ template "pulsar.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ .Values.beamwh.component }}
    cluster: {{ template "pulsar.fullname" . }}
spec:
  replicas: {{ .Values.beamwh.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "pulsar.name" . }}
      release: {{ .Release.Name }}
      component: {{ .Values.beamwh.component }}
  template:
    metadata:
      labels:
        app: {{ template "pulsar.name" . }}
        release: {{ .Release.Name }}
        component: {{ .Values.beamwh.component }}
        cluster: {{ template "pulsar.fullname" . }}
      annotations:
{{ toYaml .Values.beamwh.annotations | indent 8 }}
    spec:
    {{- if (.Values.nodeSelector) and (eq .Values.beamwh.nodeSelector false) }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.beamwh.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.beamwh.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.beamwh.tolerations }}
      tolerations:
{{ toYaml .Values.beamwh.tolerations | indent 8 }}
    {{- end }}
     affinity:
        {{- if .Values.enableAntiAffinity }}
        podAntiAffinity:
          {{- if .Values.antiAffinity.host.enabled }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - "{{ template "pulsar.name" . }}"
              - key: "release"
                operator: In
                values:
                - {{ .Release.Name }}
              - key: "component"
                operator: In
                values:
                - {{ .Values.beamwh.component }}
            topologyKey: "kubernetes.io/hostname"
          {{- end }}
          {{- if .Values.antiAffinity.zone.enabled }}
          preferredDuringSchedulingIgnoredDuringExecution: 
          - weight: 100  
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - "{{ template "pulsar.name" . }}"
                - key: "release"
                  operator: In
                  values:
                  - {{ .Release.Name }}
                - key: "component"
                  operator: In
                  values:
                  - {{ .Values.beamwh.component }}
          {{- end }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.beamwh.gracePeriod }}
      volumes:
        {{- if .Values.enableTokenAuth }}
        - name: token-private-key
          secret:
            secretName: token-private-key
        - name: token-public-key
          secret:
            secretName: token-public-key
        - name: token-admin
          secret:
            secretName: token-admin
        - name: token-superuser
          secret:
            secretName: token-superuser
        {{- end }}
        {{- if .Values.enableTls }}
        - name: certs
          secret:
            secretName: "{{ .Values.tlsSecretName }}" 
        {{- end }}
      containers:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.beamwh.component }}"
        image: "{{ .Values.image.beamwh.repository }}:{{ .Values.image.beamwh.tag }}"
        imagePullPolicy: {{ .Values.image.beamwh.pullPolicy }}
      {{- if .Values.beamwh.resources }}
        resources:
{{ toYaml .Values.beamwh.resources | indent 10 }}
      {{- end }}
        args: ["-mode", "broker"]
        volumeMounts:
          {{- if .Values.enableTokenAuth }}
          - mountPath: "/pulsar/token-private-key"
            name: token-private-key
            readOnly: true
          - mountPath: "/pulsar/token-public-key"
            name: token-public-key
            readOnly: true
          - mountPath: "/pulsar/token-admin"
            name: token-admin
            readOnly: true
          - mountPath: "/pulsar/token-superuser"
            name: token-superuser
            readOnly: true
          {{- end }}
          {{- if .Values.enableTls }}
          - name: certs
            readOnly: true
            mountPath: /pulsar/certs
            {{- end }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.beamwh.component }}"
        env:
          - name: ProcessMode
            value: "broker"
          - name: PORT
            value: "8085"
          - name: CLUSTER
            value: {{ .Values.dnsName }}
          - name: SuperRoles
            value: {{ .Values.tokenServer.allowedRoles }}
          {{- if .Values.enableTokenAuth }}
          - name: PulsarPublicKey
            value: "/pulsar/token-public-key/{{ .Values.tokenPublicKeyFile }}"
          - name: PulsarPrivateKey
            value: "/pulsar/token-private-key/{{ .Values.tokenPrivateKeyFile }}"
          {{- end }}
          - name: PbDbType
            value: {{ .Values.beamwh.dbType }}
          - name: DbName
            value: {{ .Values.beamwh.dbName }}
          - name: DbPassword
            value: {{ .Values.beamwh.dbPassword }}
          - name: DbConnectionStr
            value: {{ .Values.beamwh.dbConnectionStr }}
          - name: PbDbInterval
            value: {{ .Values.beamwh.dbRefreshInterval }}
          - name: TrustStore
            value: {{ .Values.beamwh.trustStore }}
{{- end }}
